* Add client to send commands
  - Reload
  - Restart <name|all>
  - Stop <name|all>
  - Start <name|all>
  - Status <name|all>

  By using ipc zmq communication (test rights)

* Save pid and process start time

* Add global configuration file (ini???)

* Implement process groups (configuration) to allow restart all
  processes in a group at a time

* Allow template expansion in process parameters

* Allow revisor restart
  - save complete state
  - state process state on each state change

* Send internal state changes to graphite, as well as process name
  state changes - Use zmq to send data to graphite

* Restart limit - Do no restart too often.
  Could be implemented as as times per minute
  (* Actually - its initial capacity, max capacity and charge *)

* Handle daemonizing processes
  - Daemoninzing process must state its pid file and we trace the pid after n secs ( - possibly trace all forks / vforks and clones, and exit when all processes       have stopped )
